// Copyright 2021 The CPP Proto Builder Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Automatically generated using https://google.github.io/cpp-proto-builder

#ifndef PROTO_BUILDER_TESTS_AUTOMATIC_CC_PROTO_BUILDER_H_
#define PROTO_BUILDER_TESTS_AUTOMATIC_CC_PROTO_BUILDER_H_

#include "google/protobuf/duration.pb.h"   // IWYU pragma: export
#include "google/protobuf/timestamp.pb.h"  // IWYU pragma: export
#include "proto_builder/tests/automatic.pb.h"  // IWYU pragma: export
#include "absl/time/time.h"
#include "proto_builder/oss/proto_conversion_helpers.h"

namespace proto_builder::tests {

class AutomaticBuilder {
 public:
  AutomaticBuilder() = default;
  explicit AutomaticBuilder(const Automatic& data) : data_(data) {}
  explicit AutomaticBuilder(Automatic&& data) : data_(data) {}

  operator const Automatic&() const {  // NOLINT
    return data_;
  }

  // https://google.github.io/cpp-proto-builder/templates#BEGIN

  AutomaticBuilder& SetDuration(const ::google::protobuf::Duration& value);
  AutomaticBuilder& SetDuration(const absl::Duration& value);
  AutomaticBuilder& SetDurationSeconds(int64_t value);
  AutomaticBuilder& SetDurationNanos(int32_t value);
  AutomaticBuilder& AddDurationList(const ::google::protobuf::Duration& value);
  AutomaticBuilder& AddDurationList(const absl::Duration& value);
  AutomaticBuilder& SetTimestamp(const ::google::protobuf::Timestamp& value);
  AutomaticBuilder& SetTimestamp(const absl::Time& value);
  AutomaticBuilder& SetTimestampSeconds(int64_t value);
  AutomaticBuilder& SetTimestampNanos(int32_t value);
  AutomaticBuilder& AddTimestampList(
      const ::google::protobuf::Timestamp& value);
  AutomaticBuilder& AddTimestampList(const absl::Time& value);

  // https://google.github.io/cpp-proto-builder/templates#END

 private:
  Automatic data_;
};

}  // namespace proto_builder::tests

#endif  // PROTO_BUILDER_TESTS_AUTOMATIC_CC_PROTO_BUILDER_H_
