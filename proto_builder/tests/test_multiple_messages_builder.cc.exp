// Copyright 2021 The CPP Proto Builder Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Automatically generated using https://google.github.io/cpp-proto-builder

#include "proto_builder/tests/test_multiple_messages_builder.h"

namespace proto_builder {

// https://google.github.io/cpp-proto-builder/templates#BEGIN

TestMessageABuilder& TestMessageABuilder::SetId(int32_t value) {
  data_.set_id(value);
  return *this;
}

TestMessageBBuilder& TestMessageBBuilder::SetId(const std::string& value) {
  data_.set_id(value);
  return *this;
}

TestMessageCBuilder& TestMessageCBuilder::SetA(const TestMessageA& value) {
  *data_.mutable_a() = value;
  return *this;
}

TestMessageCBuilder& TestMessageCBuilder::SetAId(int32_t value) {
  data_.mutable_a()->set_id(value);
  return *this;
}

TestMessageCBuilder& TestMessageCBuilder::AddB(const TestMessageB& value) {
  *data_.add_b() = value;
  return *this;
}

TestMessageCBuilder& TestMessageCBuilder::SetD(
    const TestMessageC::TestMessageD& value) {
  *data_.mutable_d() = value;
  return *this;
}

TestMessageCBuilder& TestMessageCBuilder::SetDId(const std::string& value) {
  data_.mutable_d()->set_id(value);
  return *this;
}

// https://google.github.io/cpp-proto-builder/templates#END

}  // namespace proto_builder
