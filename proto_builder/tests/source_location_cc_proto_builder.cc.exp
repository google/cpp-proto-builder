// Copyright 2021 The CPP Proto Builder Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Automatically generated using https://google.github.io/cpp-proto-builder

#include "proto_builder/tests/source_location_cc_proto_builder.h"

namespace proto_builder::tests {

// https://google.github.io/cpp-proto-builder/templates#BEGIN

SourceLocationBuilder& SourceLocationBuilder::SetWithoutSrcLoc(
    const std::string& value) {
  if (![=] {
        return value.empty() ? absl::InvalidArgumentError(
                                   std::string("Cannot be empty @") +
                                   proto_builder::oss::SourceLocation::current().file_name())
                             : absl::OkStatus();
      }().ok()) {
    return *this;
  }
  data_.set_without_src_loc(value);
  return *this;
}

SourceLocationBuilder& SourceLocationBuilder::SetWithSrcLoc(
    const std::string& value, proto_builder::oss::SourceLocation source_location) {
  if (![=] {
        return value.empty() ? absl::InvalidArgumentError(
                                   std::string("Cannot be empty @") +
                                   source_location.file_name())
                             : absl::OkStatus();
      }().ok()) {
    return *this;
  }
  data_.set_with_src_loc(value);
  return *this;
}

// https://google.github.io/cpp-proto-builder/templates#END

}  // namespace proto_builder::tests
