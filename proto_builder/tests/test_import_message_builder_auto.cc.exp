// Copyright 2021 The CPP Proto Builder Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Automatically generated using https://google.github.io/cpp-proto-builder

#include "proto_builder/tests/test_import_message_builder_auto.h"

namespace proto_builder {

// https://google.github.io/cpp-proto-builder/templates#BEGIN

ImportImportMessageBuilder& ImportImportMessageBuilder::SetSubOptional(
    const ImportImportMessage::Sub& value) {
  *data_.mutable_sub_optional() = value;
  return *this;
}

ImportImportMessageBuilder& ImportImportMessageBuilder::SetSubOptionalI64(
    int64_t value) {
  data_.mutable_sub_optional()->set_i64(value);
  return *this;
}

ImportImportMessageBuilder& ImportImportMessageBuilder::AddSubOptionalRep(
    const ImportImportMessage::Rep& value) {
  *data_.mutable_sub_optional()->add_rep() = value;
  return *this;
}

ImportImportMessageBuilder& ImportImportMessageBuilder::AddRepRepeated(
    const ImportImportMessage::Rep& value) {
  *data_.add_rep_repeated() = value;
  return *this;
}

ImportImportMessageBuilder& ImportImportMessageBuilder::SetExtraOptional(
    const ExtraTestMessage& value) {
  *data_.mutable_extra_optional() = value;
  return *this;
}

ImportImportMessageBuilder& ImportImportMessageBuilder::SetExtraOptionalOne(
    int32_t value) {
  data_.mutable_extra_optional()->set_one(value);
  return *this;
}

ImportImportMessageBuilder& ImportImportMessageBuilder::AddExtraRepeated(
    const ExtraTestMessage& value) {
  *data_.add_extra_repeated() = value;
  return *this;
}

ImportImportMessageBuilder& ImportImportMessageBuilder::InsertMap(
    const ::google::protobuf::Map<std::string,
                        ::proto_builder::ImportImportMessage::
                            Value>::value_type& key_value_pair) {
  data_.mutable_map()->insert(key_value_pair);
  return *this;
}

ImportImportMessage_RepBuilder& ImportImportMessage_RepBuilder::SetI64(
    int64_t value) {
  data_.set_i64(value);
  return *this;
}

ImportImportMessage_RepBuilder& ImportImportMessage_RepBuilder::SetSub(
    const ImportImportMessage::Sub& value) {
  *data_.mutable_sub() = value;
  return *this;
}

ImportImportMessage_RepBuilder& ImportImportMessage_RepBuilder::SetSubI64(
    int64_t value) {
  data_.mutable_sub()->set_i64(value);
  return *this;
}

ImportImportMessage_RepBuilder& ImportImportMessage_RepBuilder::AddSubRep(
    const ImportImportMessage::Rep& value) {
  *data_.mutable_sub()->add_rep() = value;
  return *this;
}

ImportImportMessage_ValueBuilder& ImportImportMessage_ValueBuilder::SetV(
    int64_t value) {
  data_.set_v(value);
  return *this;
}

// https://google.github.io/cpp-proto-builder/templates#END

}  // namespace proto_builder
