// Copyright 2021 The CPP Proto Builder Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Automatically generated using https://google.github.io/cpp-proto-builder

#include "proto_builder/tests/automatic_cc_proto_builder.h"

#include "proto_builder/oss/proto_conversion_helpers.h"

namespace proto_builder::tests {

// https://google.github.io/cpp-proto-builder/templates#BEGIN

AutomaticBuilder& AutomaticBuilder::SetDuration(
    const ::google::protobuf::Duration& value) {
  *data_.mutable_duration() = value;
  return *this;
}

AutomaticBuilder& AutomaticBuilder::SetDuration(const absl::Duration& value) {
  *data_.mutable_duration() = ::proto_builder::oss::ConvertToProto(value).value_or(
      ::google::protobuf::Duration());
  return *this;
}

AutomaticBuilder& AutomaticBuilder::SetDurationSeconds(int64_t value) {
  data_.mutable_duration()->set_seconds(value);
  return *this;
}

AutomaticBuilder& AutomaticBuilder::SetDurationNanos(int32_t value) {
  data_.mutable_duration()->set_nanos(value);
  return *this;
}

AutomaticBuilder& AutomaticBuilder::AddDurationList(
    const ::google::protobuf::Duration& value) {
  *data_.add_duration_list() = value;
  return *this;
}

AutomaticBuilder& AutomaticBuilder::AddDurationList(
    const absl::Duration& value) {
  *data_.add_duration_list() =
      ::proto_builder::oss::ConvertToProto(value).value_or(
          ::google::protobuf::Duration());
  return *this;
}

AutomaticBuilder& AutomaticBuilder::SetTimestamp(
    const ::google::protobuf::Timestamp& value) {
  *data_.mutable_timestamp() = value;
  return *this;
}

AutomaticBuilder& AutomaticBuilder::SetTimestamp(const absl::Time& value) {
  *data_.mutable_timestamp() =
      ::proto_builder::oss::ConvertToProto(value).value_or(
          ::google::protobuf::Timestamp());
  return *this;
}

AutomaticBuilder& AutomaticBuilder::SetTimestampSeconds(int64_t value) {
  data_.mutable_timestamp()->set_seconds(value);
  return *this;
}

AutomaticBuilder& AutomaticBuilder::SetTimestampNanos(int32_t value) {
  data_.mutable_timestamp()->set_nanos(value);
  return *this;
}

AutomaticBuilder& AutomaticBuilder::AddTimestampList(
    const ::google::protobuf::Timestamp& value) {
  *data_.add_timestamp_list() = value;
  return *this;
}

AutomaticBuilder& AutomaticBuilder::AddTimestampList(const absl::Time& value) {
  *data_.add_timestamp_list() =
      ::proto_builder::oss::ConvertToProto(value).value_or(
          ::google::protobuf::Timestamp());
  return *this;
}

// https://google.github.io/cpp-proto-builder/templates#END

}  // namespace proto_builder::tests
